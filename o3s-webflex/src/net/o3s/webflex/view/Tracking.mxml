<?xml version="1.0" encoding="utf-8"?>
<!--
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- O3S: Open Source Sport Software
- Copyright (C) 2010 Benoit Pelletier
- Contact: btpelletier@gmail.com
-
- This library is free software; you can redistribute it and/or
- modify it under the terms of the GNU Lesser General Public
- License as published by the Free Software Foundation; either
- version 2.1 of the License, or any later version.
-
- This library is distributed in the hope that it will be useful,
- but WITHOUT ANY WARRANTY; without even the implied warranty of
- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- Lesser General Public License for more details.
-
- You should have received a copy of the GNU Lesser General Public
- License along with this library; if not, write to the Free Software
- Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
- USA
-
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- $Id: pelletib $
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="init()">

   <mx:Script>
      <![CDATA[
         import mx.events.ChildExistenceChangedEvent;
         import mx.messaging.messages.AsyncMessage;
         import mx.messaging.messages.IMessage;
         import mx.messaging.events.MessageEvent;
         import mx.collections.ArrayCollection;
         import mx.utils.StringUtil;

         import mx.events.CollectionEvent;

         private var timer:Timer;

         import net.o3s.webflex.bean.Notification;

         private function init():void {
            consumerNotif.subscribe();
         }

         private function onMessage(msg:IMessage):void {


            var notification:Notification = msg.body as Notification;

            //this.textNotif.text = formatDateNotificationCreation.format(notification.creationTime) + " " + notification.type + " " + notification.message;


           this.textTypeNotif.htmlText = notification.type;
           this.textMessageNotif.htmlText = notification.message;

            notifList.addItem(notification);
		   }


            private function arrColl_collectionChange(evt:CollectionEvent):void {
                callLater(autoScrollDataGrid);
            }

            private function autoScrollDataGrid():void {
                if (DG_notifications) {
					DG_notifications.validateNow();
					DG_notifications.verticalScrollPosition = DG_notifications.maxVerticalScrollPosition;
                }
            }

        private function buildNotificationTip(item:Object):String
         {
            var myString:String = "";
            if(item != null)
            {
               myString = myString + formatDateNotificationCreation.format(item.creationTime) + ",";
               myString = myString + item.type + ",";
               myString = myString + item.message + "\n";
            }
            return myString;
         }

         public function getDateLabel(item:Object,column:DataGridColumn):String
         {
            return formatDateNotificationCreation.format(item[column.dataField]);
         }


      ]]>
   </mx:Script>

	<mx:ArrayCollection id="notifList"
						collectionChange="arrColl_collectionChange(event);" />

	<mx:Consumer id="consumerNotif" destination="notificationMessage" message="onMessage(event.message)"/>

   <mx:DateFormatter formatString="MM/DD/YY HH:NN:SS" id="formatDateNotificationCreation"/>
   <mx:DateFormatter formatString="MM/DD/YY HH:NN:SS" id="formatDateNotificationArrival"/>
   <mx:DateFormatter formatString="HH:NN:SS" id="formatDateNotificationDeparture"/>

   <mx:VBox width="95%" height="100%">

         <mx:Panel width="100%" height="30%" layout="vertical" title="Last notification" horizontalAlign="center">

            <mx:Label id="textTypeNotif" fontSize="30" color="blue" fontWeight="bold"/>
            <mx:Label id="textMessageNotif" fontSize="30" color="blue" fontStyle="italic"/>

         </mx:Panel>

         <mx:Panel width="100%" height="70%" layout="vertical" title="Notifications list">
            <mx:DataGrid id="DG_notifications" dataProvider="{this.notifList}" width="100%"  height="90%" editable="false"
                            rowCount="20" verticalScrollPolicy="on"
                            dataTipFunction="buildNotificationTip"
                            horizontalScrollPolicy="on" resizableColumns="true">
                <mx:columns>
                   <mx:DataGridColumn dataField="creationTime" headerText="Time" labelFunction="getDateLabel" showDataTips="true"  width="150" />
                   <mx:DataGridColumn dataField="type" headerText="Type" showDataTips="true"  width="100"/>
                   <mx:DataGridColumn dataField="message" headerText="Message" showDataTips="true"  width="300"/>
				    </mx:columns>

            </mx:DataGrid>

         </mx:Panel>

   </mx:VBox>

</mx:Canvas>
